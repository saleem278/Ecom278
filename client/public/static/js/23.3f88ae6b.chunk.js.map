{"version":3,"file":"static/js/23.3f88ae6b.chunk.js","mappings":"4NAGaA,EAA0BC,EAAAA,GAAAA,IAAH,mgBAkCvBC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,+PAcTG,EAAkBH,EAAAA,GAAAA,IAAH,uMAON,gBAAGI,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BL,EAAAA,GAAAA,IAAH,wJASzBM,EAAgBN,EAAAA,GAAAA,KAAH,+DAKbO,EAAiBP,EAAAA,GAAAA,KAAH,6D,UCxC3B,GAAeQ,EAAAA,EAAAA,IAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,QAAS,SAACC,GAAD,OAAUF,GAASC,EAAAA,EAAAA,IAAQC,QAGtC,EArBuB,SAAC,GAAuB,IAArBA,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACtBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOT,EAAaO,EAAbP,SAErB,OACE,UAACL,EAAD,YACE,SAACI,EAAD,CAAiBW,UAAU,QAAQV,SAAUA,KAC7C,UAACC,EAAD,YACE,UAACC,EAAD,gBAAkBM,MAClB,UAACL,EAAD,oBAAkBM,SAEpB,SAACZ,EAAD,CAAWc,QAAS,kBAAML,EAAQC,IAAOK,UAAQ,EAAjD,gC,2FCdN,IALE,SAACC,GAAD,OACA,YAAmC,IAAhCC,EAA+B,EAA/BA,UAAcC,GAAiB,YAChC,OAAOD,GAAY,SAAC,IAAD,KAAc,SAACD,GAAD,UAAsBE,O,oKCL9CC,EAA0BpB,EAAAA,GAAAA,IAAH,6FAMvBqB,EAAkBrB,EAAAA,GAAAA,GAAH,oEAKfsB,EAA2BtB,EAAAA,GAAAA,IAAH,6P,UCkBrC,GAAeQ,EAAAA,EAAAA,KAJS,SAACe,EAAOC,GAAR,MAAsB,CAC5CC,YAAYC,EAAAA,EAAAA,IAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGnE,EAlBuB,SAAC,GAAoB,IAAlBE,EAAiB,EAAjBA,WAChBK,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MACf,OACE,UAACX,EAAD,YACE,SAACC,EAAD,UAAkBS,KAClB,SAACR,EAAD,UACGS,EAAMC,KAAI,SAAArB,GAAI,OACb,SAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKsB,eCb9BC,GAAkBC,EAAAA,EAAAA,IAAyB,CAC/CjB,UAAW,SAACK,GAAD,QAAYa,EAAAA,EAAAA,IAA0Bb,MAQnD,GALgCc,EAAAA,EAAAA,KAC9B7B,EAAAA,EAAAA,IAAQ0B,GACRI,EAAAA,EAF8BD,CAG9BE,I,4ICZIC,EAAa,SAACjB,GAAD,OAAWA,EAAMkB,MAEvBC,GAAoBC,EAAAA,EAAAA,IAC/B,CAACH,IACD,SAACC,GAAD,OAAUA,EAAKG,eAGJC,GAA8BF,EAAAA,EAAAA,IACzC,CAACD,IACD,SAACE,GAAD,OACEA,EAAcE,OAAOC,KAAKH,GAAaZ,KAAI,SAACgB,GAAD,OAASJ,EAAYI,MAAQ,MAG/DtB,EAAmB,SAACuB,GAAD,OAC9BN,EAAAA,EAAAA,IAAe,CAACD,IAAoB,SAACE,GAAD,OAClCA,EAAcA,EAAYK,GAAsB,SAGvCC,GAA6BP,EAAAA,EAAAA,IACxC,CAACH,IACD,SAACC,GAAD,OAAUA,EAAKU,cAGJf,GAA4BO,EAAAA,EAAAA,IACvC,CAACH,IACD,SAACC,GAAD,QAAYA,EAAKG","sources":["components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","components/with-spinner/with-spinner.component.jsx","pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 400px;\r\n  align-items: center;\r\n  position: relative;\r\n  border: 2px solid #f7f7f7;\r\n  padding: 5px;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    mid-width: unset !important;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 90%;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 10%;\r\n  display: flex;\r\n  margin-bottom: 7px;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 85%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 15%;\r\n  text-align: right;\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addItem } from \"../../redux/cart/cart.actions\";\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer,\r\n} from \"./collection-item.styles\";\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage className=\"image\" imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>  {name}</NameContainer>\r\n        <PriceContainer>â‚¹{price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);\r\n","import React from \"react\";\r\n\r\nimport Spinner from \"../spinner/spinner.component\";\r\n\r\nconst WithSpinner =\r\n  (WrappedComponent) =>\r\n  ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n  };\r\n\r\nexport default WithSpinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CollectionTitle = styled.h2`\r\n  font-size: 38px;\r\n  margin: 0 auto 20px;\r\n`;\r\n\r\nexport const CollectionItemsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n  & > div {\r\n    margin-bottom: 15px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\n\r\nimport {\r\n  CollectionPageContainer,\r\n  CollectionTitle,\r\n  CollectionItemsContainer\r\n} from './collection.styles';\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n  const { title, items } = collection;\r\n  return (\r\n    <CollectionPageContainer>\r\n      <CollectionTitle>{title}</CollectionTitle>\r\n      <CollectionItemsContainer>\r\n        {items.map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </CollectionItemsContainer>\r\n    </CollectionPageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);","import { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { compose } from \"redux\";\r\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\nimport CollectionPage from \"./collection.component\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: (state) => !selectIsCollectionsLoaded(state),\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectShop = (state) => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  (collections) =>\r\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = (collectionUrlParam) =>\r\n  createSelector([selectCollections], (collections) =>\r\n    collections ? collections[collectionUrlParam] : null\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  (shop) => !!shop.collections\r\n);\r\n"],"names":["CollectionItemContainer","styled","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","PriceContainer","connect","dispatch","addItem","item","name","price","className","onClick","inverted","WrappedComponent","isLoading","otherProps","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","map","id","mapStateToProps","createStructuredSelector","selectIsCollectionsLoaded","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","key","collectionUrlParam","selectIsCollectionFetching","isFetching"],"sourceRoot":""}