{"version":3,"file":"static/js/116.6e5e3d27.chunk.js","mappings":"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","sources":["components/stripe-button/stripe-button.component.jsx","components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.component.jsx"],"sourcesContent":["import React from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport axios from \"axios\";\r\nimport { clearCart } from \"../../redux/cart/cart.actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from \"../../redux/cart/cart.selectors\";\r\nimport {selectCurrentUser} from  '..//../redux/user/user.selectors';\r\nconst StripeCheckoutButton = ({ price,clearCart,user }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey =\r\n    \"pk_test_51HCbm5LrJBbThTdEEcoYKnJCs76XKQm6Z48lYqqf2MYVFLiNld24kL3gI6DCNdrxhGfRCgyivBI6RYIM8y4kOqU600fQCI1Tvj\";\r\nconsole.log(user.email);\r\n  \r\n  const onToken = (token) => {\r\n    console.log('hello3');\r\n    axios({\r\n      url: \"payment\",\r\n      method: \"post\",\r\n      data: {\r\n        amount: priceForStripe,\r\n        token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        clearCart();   \r\n        alert(\"Payment Successful\"); \r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Payment Error: \", JSON.parse(error));\r\n        alert(\"Issue with payment, use only test card.\");\r\n      });\r\n  };\r\n  return (\r\n    <StripeCheckout\r\n      label={`Pay ₹ ${price}`}\r\n      name=\"WonderBox ECOM\"\r\n      billingAddress\r\n      shippingAddress\r\n      image=\"https://www.logopik.com/wp-content/uploads/edd/2018/07/Ecommerce-Logo-Vector.png\"\r\n      description={`Your total is ₹${price}`}\r\n      amount={priceForStripe}\r\n      panelLabel=\"Pay Now\"\r\n      token={onToken}\r\n      currency=\"INR\"\r\n      locale=\"en\"\r\n      email={user.email}\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearCart: () => dispatch(clearCart()),\r\n});\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  total: selectCartTotal,\r\n  user:selectCurrentUser\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StripeCheckoutButton);\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid #f8cab4;\r\n  padding: 15px 0;\r\n  font-size: 20px;\r\n  align-items: center;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 23%;\r\n  padding-right: 15px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.span`\r\n  width: 23%;\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n  }\r\n`;\r\n\r\nexport const QuantityContainer = styled(TextContainer)`\r\n  display: flex;\r\n  color: #ff5100;\r\n  span {\r\n    margin: 0 10px;\r\n  }\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const RemoveButtonContainer = styled.div`\r\n  padding-left: 12px;\r\n  cursor: pointer;\r\n  color: red;\r\n  font-size: 25px;\r\n  font-weight: bolder;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  clearItemFromCart,\r\n  addItem,\r\n  removeItem\r\n} from '../../redux/cart/cart.actions';\r\n\r\nimport {\r\n  CheckoutItemContainer,\r\n  ImageContainer,\r\n  TextContainer,\r\n  QuantityContainer,\r\n  RemoveButtonContainer\r\n} from './checkout-item.styles';\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\r\n  const { name, imageUrl, price, quantity } = cartItem;\r\n  return (\r\n    <CheckoutItemContainer>\r\n      <ImageContainer>\r\n        <img src={imageUrl} alt='item' />\r\n      </ImageContainer>\r\n      <TextContainer>{name}</TextContainer>\r\n      <QuantityContainer>\r\n        <div onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n        <span style={{color:\"black\"}}>{quantity}</span>\r\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\r\n      </QuantityContainer>\r\n      <TextContainer>₹{price}</TextContainer>\r\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\r\n        &#10005;\r\n      </RemoveButtonContainer>\r\n    </CheckoutItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  clearItem: item => dispatch(clearItemFromCart(item)),\r\n  addItem: item => dispatch(addItem(item)),\r\n  removeItem: item => dispatch(removeItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CheckoutItem);","import styled from 'styled-components';\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n  button {\r\n    margin-left: auto;\r\n    margin-top: 50px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n  &:last-child {\r\n    width: 8%;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n    &:last-child {\r\n      width: 12%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  font-size: 24px;\r\n  color: red;\r\n`;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport StripeCheckoutButton from \"../../components/stripe-button/stripe-button.component\";\r\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\r\n\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from \"../../redux/cart/cart.selectors\";\r\n\r\nimport {\r\n  CheckoutPageContainer,\r\n  CheckoutHeaderContainer,\r\n  HeaderBlockContainer,\r\n  TotalContainer,\r\n  WarningContainer,\r\n} from \"./checkout.styles\";\r\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\r\nimport { clearCart } from \"../../redux/cart/cart.actions\";\r\nconst CheckoutPage = ({ cartItems, total, clearCart }) => (\r\n  <>\r\n    <div style={cartItems.length===0?{ display: \"none\" }:{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n      <CustomButton type=\"button\" onClick={clearCart}>\r\n        Clear Cart\r\n      </CustomButton>\r\n    </div>\r\n    <CheckoutPageContainer>\r\n      <CheckoutHeaderContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Product</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Description</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Quantity</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Price</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Remove</span>\r\n        </HeaderBlockContainer>\r\n      </CheckoutHeaderContainer>\r\n      {cartItems.length > 0 ? (\r\n        cartItems.map((cartItem) => (\r\n          <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n        ))\r\n      ) : (\r\n        <WarningContainer>Cart is Empty</WarningContainer>\r\n      )}\r\n      {cartItems.length > 0 ? (\r\n        <>\r\n          <TotalContainer>TOTAL: ₹{total}</TotalContainer>\r\n          <WarningContainer>\r\n            *Please use the following test credit card for payments*\r\n            <br />\r\n            4242 4242 4242 4242 - Exp: UPCOMING MM/YY - CVV: 123\r\n          </WarningContainer>\r\n          <StripeCheckoutButton price={total} />\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </CheckoutPageContainer>\r\n  </>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearCart: () => dispatch(clearCart()),\r\n});\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  total: selectCartTotal,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutPage);\r\n"],"names":["mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","user","selectCurrentUser","connect","dispatch","clearCart","price","priceForStripe","console","log","email","label","name","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","res","alert","catch","error","JSON","parse","currency","locale","stripeKey","CheckoutItemContainer","styled","ImageContainer","TextContainer","QuantityContainer","RemoveButtonContainer","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","imageUrl","quantity","src","alt","onClick","style","color","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","length","display","justifyContent","type","map","id"],"sourceRoot":""}